class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& arr, int target) {
       vector<vector<int>> ans;
        vector<int> combi;
      findCombination(0,target,arr,ans,combi);
        return ans;
    }

    void findCombination(int ind , int target , vector<int> & arr, vector<vector<int>> & ans, vector<int> & ds){
    if (target == 0) {
        ans.push_back(ds);
         return ;
    }
    if (ind == arr.size()) 
    return ;

// pick up the element
if (arr[ind] <= target) {
    ds.push_back(arr[ind]);
    findCombination(ind, target - arr[ind], arr, ans, ds);
    ds.pop_back();
}

findCombination(ind + 1, target, arr, ans, ds);
    }
};
